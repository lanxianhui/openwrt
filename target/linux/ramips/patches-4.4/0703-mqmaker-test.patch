diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 63e0a05..b496ade 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -155,8 +155,10 @@ static inline int spi_nor_read_dummy_cycles(struct spi_nor *nor)
  */
 static inline int write_sr(struct spi_nor *nor, u8 val)
 {
-	nor->cmd_buf[0] = val;
-	return nor->write_reg(nor, SPINOR_OP_WRSR, nor->cmd_buf, 1);
+        nor->cmd_buf[0] = val & 0xff;
+        nor->cmd_buf[1] = (val >> 8);
+
+        return nor->write_reg(nor, SPINOR_OP_WRSR, nor->cmd_buf, 2);
 }
 
 /*
@@ -200,6 +202,7 @@ static inline int set_4byte(struct spi_nor *nor, const struct flash_info *info,
 
 		cmd = enable ? SPINOR_OP_EN4B : SPINOR_OP_EX4B;
 		status = nor->write_reg(nor, cmd, NULL, 0);
+		status = 0;
 		if (need_wren)
 			write_disable(nor);
 
@@ -1378,6 +1381,7 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 
 	nor->program_opcode = SPINOR_OP_PP;
 
+#if 0
 	if (info->addr_width)
 		nor->addr_width = info->addr_width;
 	else if (mtd->size > 0x1000000) {
@@ -1408,6 +1412,8 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 	} else {
 		nor->addr_width = 3;
 	}
+#endif
+	 nor->addr_width = 3;
 
 	nor->read_dummy = spi_nor_read_dummy_cycles(nor);
 
